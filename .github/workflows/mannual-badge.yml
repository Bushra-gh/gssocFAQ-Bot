name: Manual Send Contributor Badge to All Merged PRs

on:
  workflow_dispatch: {}
  # Optional: Uncomment this if you want to run it on a schedule (e.g., every day)
  # schedule:
  #   - cron: '0 0 * * *'  # This will run daily at midnight UTC

permissions:
  pull-requests: write
  contents: read

jobs:
  reward-contributor:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch all merged PRs
        uses: actions/github-script@v6
        id: fetch_prs
        with:
          script: |
            const prList = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',  // We want only closed PRs
            });

            // Filter only merged PRs
            const mergedPrs = prList.data.filter(pr => pr.merged_at !== null);
            
            return mergedPrs.map(pr => pr.number);

      - name: Assign Random Badge and Post Comment on Merged PRs
        uses: actions/github-script@v6
        with:
          script: |
            const prList = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              per_page: 100,
            });
      
            const mergedPrs = prList.data.filter(pr => pr.merged_at !== null);
      
            const mainBadgeUrl = "https://drive.google.com/uc?export=view&id=1-B3va3balHY7upoN3nhNEnj1xFhzbcsr";
      
            const badgePool = [
              { id: '1nheki_edqi1fguGmKeDe2xVhd41CAcoH', rarity: 'common' },
              { id: '1_kj94AZb6NkCso1ljA3vWF5HoTumwBhx', rarity: 'common' },
              { id: '1MlUM2RIqd8Q0ek67pMnTNqliqmKND2Rk', rarity: 'common' },
              { id: '1TI4XSRFUfANR5vnuyYhqFf8eWvHloeX2', rarity: 'common' },
              { id: '1x2eYK4oqihEXZoQ_eWnAgM0jXchYZpY4', rarity: 'common' },
              { id: '1otRyHexIqXtKLbCi6Fc8cPRBhzlQYXUd', rarity: 'epic' },
              { id: '17qZ9ZQ3P_jV29J7-qariHkRXgl74u6SZ', rarity: 'rare' },
              { id: '1Cmlm3odKq1VwOrFb1OpWjyTJVeVH8rxG', rarity: 'epic' },
              { id: '1rQrn7RMZOUoJ1Lo6J_Bq0taMI3Q8bziq', rarity: 'epic' },
              { id: '1BsBdIlUDxxweK1M6Pjmhtyd78aXOiBD5', rarity: 'rare' }
            ];
      
            const weights = { common: 5, rare: 2, epic: 1 };
      
            function weightedRandomSet(pool, count) {
              const expanded = pool.flatMap(b => Array(Math.round(weights[b.rarity] * 10)).fill(b));
              const uniqueSet = new Set();
              while (uniqueSet.size < count) {
                const pick = expanded[Math.floor(Math.random() * expanded.length)];
                uniqueSet.add(pick);
              }
              return Array.from(uniqueSet);
            }
      
            for (const pr of mergedPrs) {
              const username = pr.user.login;
              const issue_number = pr.number;
              const selectedBadges = weightedRandomSet(badgePool, 3);

              // Markdown version of HTML content
              let badgeMarkdown = `
                ![GSSOC Contributor Badge](${mainBadgeUrl})  
                ðŸŽ‰ **Thanks @${username} for contributing to the _GSSOC FAQ Discord Bot Repository_!**  
                It elevated the repo.  
                You've earned the **Pro Contributor** badge and unlocked your **DEV SLAYER** achievements!

                ### Badges Earned:
                `;

              selectedBadges.forEach(badge => {
                const url = `https://drive.google.com/uc?export=view&id=${badge.id}`;
                badgeMarkdown += `![Dev Slayer Badge](${url})\n`;
              });

              badgeMarkdown += `
                ðŸŽ‰ **Your PR just slayed the issue!** Youâ€™ve officially joined the ranks of the **Dev Slayers**.  
                Keep coding. The codebase sleeps peacefully tonight.
              `;

              await github.rest.issues.createComment({
                issue_number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: badgeMarkdown
              });
            }
